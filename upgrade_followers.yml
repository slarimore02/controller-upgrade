---
- hosts: "{{ hosts | default('all') }}"
  gather_facts: no
  roles:
    - role: "avinetworks.avisdk"
  connection: local
  vars_files: vars.yml
  any_errors_fatal: true
  serial: 1

  tasks:
    # Calling patch_upgrade role if this is a patch operation
    - name: Calling patch_upgrade role - FOLLOWERS
      import_role:
        name: patch_upgrade
      when: 
        - image_type[0] == "IMAGE_TYPE_PATCH"
        - cluster_uuid != gslb.obj.results.0.leader_cluster_uuid
        - "{{ cluster_version.obj.0.version | compare_versions(zip_image_version) == false }}"

    - name: Calling system_upgrade role - FOLLOWERS
      import_role:
        name: system_upgrade
      when: 
        - image_type[0] == "IMAGE_TYPE_SYSTEM"
        - cluster_uuid != gslb.obj.results.0.leader_cluster_uuid
        - "{{ cluster_version.obj.0.version | compare_versions(zip_image_version) == false }}"

    - name: Monitor Upgrade - FOLLOWERS
      avi_api_session:
        avi_credentials: "{{ avi_credentials }}"
        api_version: "{{ avi_credentials.api_version }}"
        http_method: get
        timeout: 300
        path: "upgradestatusinfo"
      register: upgrade_status
      until: "{{ upgrade_status | upgrade_result() }}"
      delay: 30
      retries: 80
      when: 
        - cluster_uuid != gslb.obj.results.0.leader_cluster_uuid
        - "{{ cluster_version.obj.0.version | compare_versions(zip_image_version) == false }}"
